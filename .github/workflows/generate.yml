name: Generate website
on:
    push:
        branches:
            - main
    workflow_dispatch:

concurrency:
    group: generate
    cancel-in-progress: true

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install Julia
              uses: julia-actions/setup-julia@v2
              with:
                  version: "1.10"

            # We set up a folder that Pluto can use to cache exported notebooks. If the notebook file did not change, then Pluto can take the exported file from cache instead of running the notebook.
            - name: ‚è± Cache notebook states
              uses: actions/cache@v4
              with:
                path: _cache
                key: ${{ runner.os }}-pluto_state_cache-v3-fall22-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}-${{ github.run_id }}
                restore-keys: |
                    ${{ runner.os }}-pluto_state_cache-v3-fall22-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}

            - name: ‚è± Cache .julia
              uses: actions/cache@v4
              with:
                path: ~/.julia
                key: ${{ runner.os }}-dotjulia-v1-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}-${{ github.run_id }}
                restore-keys: |
                    ${{ runner.os }}-dotjulia-v1-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}

            - name: ü™¥ Generate site
              run: julia --project=pluto-deployment-environment -e '
                  import Pkg;
                  Pkg.instantiate();

                  include("./generate.jl")
                  
                  cp("./netlify.toml", "./_site/netlify.toml")'

            
            - uses: actions/upload-artifact@v4
              if: always()
              with:
                path: generation_report.html

            - name: üöÄ Deploy to dist
              uses: JamesIves/github-pages-deploy-action@4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  branch: dist
                  folder: _site
